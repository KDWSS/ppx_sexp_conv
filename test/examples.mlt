
module Position_for_polymorphic_variant_errors = struct
  type t1 = [ `A ] [@@deriving of_sexp]
  type t2 = [ `B ] [@@deriving of_sexp]
  type t3 = A of [ t1 | t2 ] [@@deriving of_sexp]
  let (_ : t3) = t3_of_sexp (List [Atom "A"; Atom "C"])
end
[%%expect{|
Exception:
(Sexplib.Conv.Of_sexp_error
 (Failure
  "examples.mlt.Position_for_polymorphic_variant_errors.t3_of_sexp: no matching variant found")
 C).
|}]
